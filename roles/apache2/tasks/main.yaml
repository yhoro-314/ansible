# facts holen
- package_facts:
    manager: auto
#######################

- name: Check whether a package called apache is installed
  debug:
    msg: "Der {{ansible_facts.packages[ 'apache2' ][0]['name'] }} >
    in der Version {{ansible_facts.packages[ 'apache2' ][0]['version'].split('-')[0] }} ist schon installiert "
  when: "'apache2' in ansible_facts.packages"

- name: install apache2
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name: apache2
    state: present
  when: "'apache2' not in ansible_facts.packages"
  register: installed
- package_facts:
    manager: auto
  when: installed is not skipped

- debug:
    msg: "Der Webserver {{ ansible_facts.packages[ 'apache2' ][0]['name'] }} >
     mit der Version  {{ ansible_facts.packages['apache2'][0]['version'].split('~')[0] }} wurde erfolgreich vorinstalliert"
  when:  installed  is not skipped
###################
- pause:
    prompt: Möchten Module hinzufügen
    echo: yes
  register: mod_enable
####### nur für testzwecken
#- debug:
#    msg: Das ist in der variable mod_enable {{ mod_enable.user_input }}
#  when: mod_enable.user_input == 'yes'
##########################################
- name: blocks testen für Error handling
  block:
    - name: Enable the apache2 module im block_modus
      community.general.apache2_module:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ apache_mods }}"
      when: (mod_enable.user_input == 'yes' or 'y') and apache_mods is defined
      register: fail
#      ignore_errors: yes
  rescue:
    - name: Debug für block
      debug:
        msg: "Bitte Prüfe die Module, die du angegeben hast , ein Modul wurde nicht gefunden"










######################################################
#- name: Enable the apache2 module
#  community.general.apache2_module:
#    name: "{{ item }}"
#    state: present
#  with_items:
#    - "{{ apache_mods }}"
#  when: (mod_enable.user_input == 'yes' or 'y') and apache_mods is defined
#  register: fail

# für den Fall dass die Variable apache_mods nicht gesetzt ist
- debug:
    msg: "Bitte die variable apache_mods als eine Liste nutzen um ein oder mehrere Module laden"
  when: (apache_mods is undefined) and (mod_enable.user_input == 'yes' or 'y')

