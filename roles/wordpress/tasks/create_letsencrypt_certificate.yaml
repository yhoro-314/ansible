# damit der account key nicht nochmal generiert wird
- name: Check if the lets encrypt account key exists
  stat:
    path: "/etc/letsencrypt/{{ vhost.server_name }}/account-{{ vhost.server_name }}.key"
  register: account_key

- name: Generate let's encrypt account key if not exists
  community.crypto.openssl_privatekey:
    path: "/etc/letsencrypt/{{ vhost.server_name }}/account-{{ vhost.server_name }}.key"
  when: not account_key.stat.exists

- name: Generate let's encrypt private key with the default values (4096 bits, RSA)
  community.crypto.openssl_privatekey:
    path: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.pem"

- name: Generate an OpenSSL CSR
  community.crypto.openssl_csr:
    path: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.csr"
    privatekey_path: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.pem"
    email_address: "{{ vhost.email_address }}"
    common_name: "{{ vhost.common_name }}"
    country_name: "{{ vhost.country_name | default('DE')}}"
    organization_name: "{{ vhost.organization_name }}"
    #subject_alt_name: "{{ [dns_name] }}"
    subject_alt_name: "{{ vhost.dns_name | map('regex_replace', '^', 'DNS:') }}"
    key_usage:
      - digitalSignature
      - keyAgreement
    extended_key_usage:
      #- clientAuth
      - serverAuth

- name: Create a challange for the vhost domain
  community.crypto.acme_certificate:
    terms_agreed: yes
    challenge: http-01
    acme_version: 2
    acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
    #acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    account_key_src: "/etc/letsencrypt/{{ vhost.server_name }}/account-{{ vhost.server_name }}.key"
    csr: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.csr"
    dest: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.crt"
    chain: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}-chain.crt"
    fullchain_dest: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}-fullchain.crt"
  register: vhost_challenge

- name: create http-01 challenege file
  copy:
    dest: "/var/www/vhosts/{{ vhost.server_name }}/httpdocs/{{ vhost_challenge['challenge_data'][item]['http-01']['resource'] }}"
    content: "{{ vhost_challenge['challenge_data'][item]['http-01']['resource_value'] }}"
    #ignore_errors: True
  with_items:
    - "{{ vhost.dns_name }}"
  ignore_errors: True
  when: vhost_challenge is changed


- name: Let the challenge be validated and retrieve the cert and intermediate certificate
  community.crypto.acme_certificate:
    terms_agreed: yes
    challenge: http-01
    acme_version: 2
    acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
    #acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    account_key_src: "//etc/letsencrypt/{{ vhost.server_name }}/account-{{ vhost.server_name }}.key"
    csr: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.csr"
    #dest: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}.crt"
    chain: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}-chain.crt"
    fullchain_dest: "/etc/letsencrypt/{{ vhost.server_name }}/{{ vhost.server_name }}-fullchain.crt"
    data: "{{ vhost_challenge }}"
  register: test1


- name: Add apache vhost configuration.
  template:
    src: "vhost_wordpress_ssl.conf.j2"
    dest: /etc/apache2/sites-available/{{ vhost.server_name }}.conf
    owner: "www-data"
    group: "www-data"
    mode: 0644
  notify:
    - restart apache

- name: Add vhost symlink in sites-enabled.
  file:
    src: /etc/apache2/sites-available/{{ vhost.server_name }}.conf
    dest: /etc/apache2/sites-enabled/{{ vhost.server_name }}.conf
    state: link
  notify:
    - restart apache
